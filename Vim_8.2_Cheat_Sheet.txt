Vim 8.2 Cheat Sheet for Beginners – kitsune03@outlook.com

0. 모드

                         수정모드 (R)
                             ↕
입력모드 (i,a,o,I,A,O) ↔ 일반모드 (Esc) ↔ 명령모드 ( : )
                             ↕
                      비주얼모드 (v,V)

0-1. 일반모드
// Vim 시작시 자동 진입, 다른 4모드에서 esc로 진입

0-2. 일반모드 → 입력모드
i : insert - 커서부터 입력
a : append  - 커서 다음부터 입력
I : 줄의 글자가 있는 가장 처음에 입력 // = 커서가 첫 글자의 앞
A : 줄의 가장 마지막에 입력 // = 커서가 eol의 앞
o : open - 아랫 줄을 만들고 입력
O : 윗 줄을 만들고 입력

0-3. 일반모드 → 명령모드
:명령어 – 명령모드 진입
:q : quit – 종료 (저장할지 물어봄)
:w : write - 저장
:wq/:x : 저장 및 종료 (:qw는 안된다)
// 일반모드에서 ZZ로도 바로 가능하다
:n : new - 새 파일 작성
:e : edit - 기존 파일 오픈 (없을 시 새 파일 작성)
// 마지막에 !가 붙으면 모든 명령어 강제 실행

0-4. 일반모드 → 비주얼모드
// Vim에서 영역선택은 비주얼모드에서만 가능하다
v : visual mode – 글자 단위로 선택하는 비주얼모드
V : Visual line – 줄 단위로 선택하는 비주얼모드

0-5. 일반모드 → 수정모드
R : Replace – 수정모드 진입
// 일반적인 텍스트 에디터는 키보드의 Insert로 삽입/수정모드를 전환하는데, Vim에서는 수정모드에서만 덮어쓰는 것이 가능하다


/*** 이 줄 이후 모든 내용은 일반모드에서 사용 ***/
1. 커서 이동
1-1. 하나씩 이동

 hjkl = 좌하상우 - 직관적이지 못하지만 익숙해져야 한다
^ - 줄의 가장 첫단어의 처음으로 이동
0 - 줄의 가장 처음으로 이동 (hard begin)
$ - 줄의 가장 끝(eol 전)으로 이동 (hard end)
w – 단어 첫 글자로 이동, 다음 단어 첫 글자로 이동
b – 단어 첫 글자로 이동, 이전 단어 첫 글자로 이동
e – 단어 마지막 글자로 이동, 다음 단어 마지막 글자로 이동
ge – 단어 마지막 글자로 이동, 이전 단어 마지막 글자로 이동
// $, w, e는 (뒤로 탐색하기에) 명령어 조합에서 매번 사용된다

1-2. 파일 내 이동
gg : go start – 파일의 가장 첫 줄 첫 단어의 처음으로 이동
G : Go end – 파일의 가장 마지막 줄 첫 단어의 처음으로 이동
줄번호 + G/gg - 해당 줄번호 첫 단어의 처음으로 이동


2. 잘라내기
(추후 붙혀넣지 않으면 삭제와 사실상 같음)

2-1. x : cut character - 커서의 한 글자 잘라내기
// x는 숫자와 조합이 가능하다
2x – 커서의 한 글자와 그의 다음 한 글자까지 글자 2개 잘라내기

2-2. X – 커서 왼쪽의 한 글자 잘라내기 (=Backspace)
// X는 숫자와 조합이 가능하다
2X – 커서 왼쪽의 한 글자와 그의 왼쪽 한 글자까지 글자 2개 잘라내기

2-3. d : cut - 잘라내기
// d 하나만으로는 효과가 없으며, 조합을 해야 한다
D/d$ - 현재 커서부터 eol 전까지 잘라내기
dw - 현재 커서부터 다음 단어 이전의 모든 것 잘라내기 (공백 포함)
de - 현재 커서부터 현재 단어의 마지막까지 잘라내기
// d는 숫자와 조합이 가능하다
2D/2d$ - 현재 커서부터 다음 줄의 eol 전까지 잘라내기 (현재 줄 eol 포함)
2dw – 현재 커서부터 다다음 단어 이전의 모든 것 잘라내기 (공백 포함)
2de – 현재 커서부터 다음 단어의 마지막까지 잘라내기 (공백 포함)

2-4. dd – 커서가 있는 줄 전체를 잘라내기
// dd는 d와 다르게 dd만으로도 효과가 있다
// dd 역시 숫자와 조합이 가능하다
2dd – 커서가 있는 줄과 그 아랫줄 전체를 잘라내기 (현재 줄 eol 포함)


3. 복사
3-1. y : yank (copy) – 복사
(비주얼모드에서 영역 선택 후) y - 선택된 영역을 복사
// y를 일반모드에서 사용시, 조합을 해야한다
y$ - 현재 커서부터 eol 전까지 복사
yw – 현재 커서부터 다음 단어 이전의 모든 것 복사 (공백 포함)
ye – 현재 커서부터 현재 단어의 마지막까지 복사
// y는 숫자와 조합이 가능하다
2y$ - 현재 커서부터 다음 줄의 eol 전까지 복사 (현재 줄 eol 포함)
2yw – 현재 커서부터 다다음 단어 이전의 모든 것 복사 (공백 포함)
2ye – 현재 커서부터 다음 단어의 마지막까지 복사 (공백 포함)

3-2. Y/yy – 커서가 있는 줄 전체를 복사
// 단, yy로 복사한 줄을 붙혀넣기 시 커서의 위치에 삽입하는 것이 아닌 커서의 아래 새로운 줄에 붙혀넣음
// yy 역시 숫자와 조합이 가능하다
2Y/2yy – 커서가 있는 줄과 그 아랫줄 전체를 복사 (현재 줄 eol 포함)


4. 붙혀넣기
4-1. p : paste – 커서 하나 뒤에 붙혀넣기
4-2. P : Paste – 커서위치에 붙혀넣기


5. 실행 취소
5-1. u : undo – 직전실행 취소
5-2. Ctrl + r : revert – 직전실행 취소의 취소

5-3. U : 마지막으로 수정한 줄의 모든 변경사항 원상복구
// 5-3제외 4, 5는 숫자와 조합이 가능은하나, 보통 쓰이지 않는다


6. 검색
6-1. /검색어 - 커서 이후의 가장 가까운 검색어 검색
6-2. ?검색어 – 커서 이전의 가장 가까운 검색어 검색

// 검색된 상태에서
6-3. n – 검색 결과 이후 탐색
6-4. N – 겸색 결과 이전 탐색


7. 대체
7-1. r : replace - 커서의 한 글자 교체

7-2. c : change – 대체
// c 하나만으로는 효과가 없으며, 조합을 해야 한다
C/c$ - 현재 커서부터 eol 전까지 삭제 후 삽입
cw – 현재 커서부터 다음 단어 이전의 모든 것 삭제 후 삽입 (공백 포함)
ce - 현재 커서부터 현재 단어의 마지막까지 삭제 후 삽입
// c는 숫자와 조합이 가능하다
2C/2c$ - 현재 커서부터 다음 줄의 eol 전까지 삭제 후 삽입 (현재줄 eol 포함)
2cw – 현재 커서부터 다다음 단어 이전의 모든 것 삭제 후 삽입 (공백 포함)
2ce – 현재 커서부터 다음 단어의 마지막까지 삭제 후 삽입 (공백 포함)

7-3. cc – 커서가 있는 줄 전체를 지운 후 삽입
// cc는 c와 다르게 cc만으로도 효과가 있다 
// cc 역시 숫자와 조합이 가능하다
2cc – 커서가 있는 줄과 그 아랫줄 전체를 지운 후 삽입


8. 검색 & 대체
8-1. :%s/검색어/대체어/gc – 파일 전체에서 검색어를 대체어로 바꾸는데, 해당되는 부분을 바꿀지 하나씩 물어봄
8-2. :%s/검색어/대체어/g – 파일 전체에서 검색어를 대체어로 바꾸는데, 아무것도 물어보지 않음
8-3. :줄번호시작,줄번호끝s/검색어/대체어/gc – 지정한 줄 영역에서 검색어를 대체어로 바꾸는데, 해당되는 부분을 바꿀지 하나씩 물어봄
8-4. :줄번호시작,줄번호끝s/검색어/대체어/g – 지정한 줄 영역에서 검색어를 대체어로 바꾸는데, 아무것도 물어보지 않음


9. 날코딩시
(비주얼모드에서 영역 선택 후) = - 들여쓰기 자동 정렬
/*** 들여쓰기 칸 수는 ~/.vimrc 파일을 생성하여

set smartindent
set tabstop=4
set expandtab
set shiftwidth=4

위의 내용을 추가해서 저장하는 것으로 변경이 가능하다 
(해당 홈 폴더의 사용자만 적용) ***/

>> - Tab
<< - Shift + Tab

{ - 이전 단락으로 이동
} - 다음 단락으로 이동
% - 짝을 이루는 소, 중, 대괄호로 이동 (짝 내에서만)

Ctrl + g – 현재 커서 위치가 파일의 몇 번째 줄인지 표시
zz – 현재 커서 위치가 중앙이 되도록 스크롤
